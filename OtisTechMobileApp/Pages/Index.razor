@page "/"
@using Newtonsoft.Json;
@using OtisTechMobileApp.Models;
@using OtisTechMobileApp.Models.ViewModels.Errands;
@inject IApiService apiService;
@inject NavigationManager navManager;


<h1>Otis TechApp</h1>

<MudText>Current active errands:</MudText>


<MudTable T="ErrandView" Items="errands">
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Location</MudTh>
        <MudTh>Go to</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.ErrandNumber</MudTd>
        <MudTd DataLabel="Location">@context.Title</MudTd>
        <MudTd DataLabel="Expand">
            <MudButton OnClick="@(()=>RedirectToErrand(context.ErrandNumber))">
                KNAPP
            </MudButton>
        </MudTd>
    </RowTemplate>
</MudTable>

<MudButton OnClick="LoadData">Load data if not loaded</MudButton>

@code{

    public ErrandView? errandView { get; set; }

    public List<ErrandView> errands { get; set; } = new List<ErrandView>();


    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    public async Task LoadData()
    {
        errands = JsonConvert.DeserializeObject<List<ErrandView>>(await apiService.GetAsync("Errands/GetErrands", null))!;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            await Timer_LoadDataAsync();
        }
    }
    private async Task Timer_LoadDataAsync()
    {
        while(true)
        {
            await Task.Delay(10000);
            await LoadData();
            StateHasChanged();
        }
    }

    public void RedirectToErrand(string Id) => navManager.NavigateTo($"/Errand/{Id}");
}