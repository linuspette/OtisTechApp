@using Newtonsoft.Json;
@using OtisTechMobileApp.Models.InputModels;
@using OtisTechMobileApp.Models.ViewModels.Errands;
@using AutoMapper;
@inject IApiService apiService;
@page "/Errand/{ErrandId}"
@page "/Errand/"

<h3>Errand</h3>

<MudTable T="ErrandView" Items="errand">
    <HeaderContent>
        <MudTh>Errand Number</MudTh>
        <MudTh>Elavator Id</MudTh>
        <MudTh>Is Resolved</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Errand Number">@context.ErrandNumber</MudTd>
        <MudTd DataLabel="Elevator Id">@context.Elevator.Id</MudTd>
        <MudTd DataLabel="Is Resolved">@context.IsResolved</MudTd>

    </RowTemplate>


</MudTable>


<MudTextField @bind-Value="comment" Variant="Variant.Outlined"></MudTextField>



<MudButton>Update with Comment</MudButton>

<MudButton>Go back to list</MudButton>


@code {
    public List<ErrandView> errand { get; set; } = new List<ErrandView>();



    public ErrandView errandOne { get; set; } = new ErrandView();
    public Mapper mapper = new Mapper();
    public ErrandInputModel errandInput { get; set; } = new ErrandInputModel();

    public bool isResolved { get; set; }


    [Parameter]
    public string? ErrandId { get; set; }

    public string? comment { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var jsonObject = await apiService.GetAsync($"Errands/GetErrand", new Dictionary<string, string> { { "errandNumber", ErrandId! } });

        errandOne = JsonConvert.DeserializeObject<ErrandView>(jsonObject) ?? null!;

        errandInput = mapper.Map<ErrandView>(ErrandInputModel);
        

        errand.Add(errandOne);
    }

    public async Task SaveErrand()
    {
        ErrandUpdateInputModel errandUpdateInput = new()
        {
            ErrandNumber = errandOne.ErrandNumber,
            Status = errandInput.ErrandUpdates.Status,
            IsResolved = isResolved,
            Message = comment,
            EmployeeIds = errandOne.AssignedTechnicians
            
            
        };
    }

}
